Dashboard.jsx
import {Link,Outlet} from "react-router-dom";
import {useCart} from "./CartContext";
import "./Dashboard.css";
import "./Cartcom.css";

const Dashboard=()=>{
    const { cart }=useCart();

    return(
        <div className="dashboard-container">
            <Link to="/cart" className="cart-icon">
            {cart.length>0 && <span className="cart-count">{cart.length}</span>}
            </Link>
            <nav className="dashboard-nav">
                <Link to="">Laptops</Link>
                <Link to="mobiles">Mobiles</Link>
                <Link to='="watches'>Watches</Link>
            </nav>
            <div className="dashboard-content">
                <Outlet/>
            </div>
        </div>
    );
};
export default Dashboard;

login.jsx:
import {useRef, useState} from "react";
import { useNavigate } from "react-router-dom";
import "./login.css";

const Login=()=>{
    const uname=useRef(null);
    const upwd=useRef(null);
    const navigate=useNavigate();
    const [error,setError]=useState("");

    const login=()=>{
        if(!uname.current.value || !upwd.current.value){
            setError("Username and Password are required");
            return;
        }
        if (uname.current.value==="mru" && upwd.current.value==="mru@123"){
            navigate("/dashboard");
        }else{
            setError("Invalid Credentials");
        }
    };
return(
    <div className="login-container">
        <div className="login-box">
            <h2>Login</h2>
            {error && <p className="error-message">{error}</p>}
            <input type="text" ref={uname} placeholder="Enter username"/>
            <input type="password" ref={upwd} placeholder="Enter password"/>
            <button onClick={login}>Login</button>
        </div>

    </div>
)
}
export default Login;

Mobiles.jsx:
import { useEffect, useState } from "react";
import axios from 'axios';
import './Mobiles.css';
const Mobiles=()=>{
    const [mobiles,SetMobiles]=useState([]);
    const get_mobiles= async() => {
    const res = await axios.get("http://localhost:8081/mobiles");
    const {data}=res;
    SetMobiles(data);
    }
    useEffect(()=>{
        get_mobiles();
    },[])
    return(
        <>
        <div className="container">
            <div className="parent">
                {
                    mobiles.map((element,index)=>{
                        return(
                            <div className="child" key={index}>
                                <img src={element.pimage}/>
                                <h4>{element.pname}</h4>
                                <h4>{element.pcost}</h4>
                                <h4>{element.pqty}</h4>
                            </div>
                        )
                    })
                }
            </div>
            </div>
        </>
    )
}
export default Mobiles;

ProductDetailsjsx:
import { useParams, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import { useCart } from "./CartContext";
import "./ProductDetails.css";
import {Link} from "react-router-dom";
import "./CartIcon.css";

const ProductDetails = () => {
    const { type, id } = useParams();
    const navigate = useNavigate();
    const { addToCart, cart } = useCart();
    const [product, setProduct] = useState(null);
    const [quantity, setQuantity] = useState(1);

    useEffect(() => {
        axios.get(`http://localhost:9000/${type}`)
            .then(res => {
                const item = res.data.find(prod => prod.id === parseInt(id));
                setProduct(item);
            });
    }, [type, id]);

    if (!product) return <p>Loading...</p>;

    return (
        <div className="product-details">
            {/* Cart Icon at Top Right */}
            <Link to="/cart" className="cart-icon">
                üõí ({cart.length})
            </Link>

            {/* Back Button */}
            <button className="back-button" onClick={() => navigate(-1)}>‚Üê Back</button>

            <img src={product.pimage} alt={product.pname} />
            <h2><i className="fa fa-rupee"></i> {product.pcost}</h2>
            <div className="quantity-controls">
                <button onClick={() => setQuantity(Math.max(1, quantity - 1))}>-</button>
                <span> {quantity} </span>
                <button onClick={() => setQuantity(Math.min(product.pqty, quantity + 1))}>+</button>
            </div>
            <button onClick={() => addToCart(product, quantity)}>Add to Cart</button>
        </div>
    );
};

export default ProductDetails;

Cart.jsx:
import { useCart } from "./cartContext";
import { useNavigate } from "react-router-dom";
import './cart.css';

const Cart = () => {
    const { cart, removeFromCart } = useCart();
    const navigate = useNavigate();

    const totalPrice = cart.reduce((acc, item) => acc + item.pcost * item.qty, 0);

    return (
        <div>
            {cart.map(item => (
                <div key={item.uniqueKey} className="cart-item">
                    <img src={item.pimage} alt={item.pname} />
                    <div>
                        <h3>{item.pname}</h3>
                        <p>Type: {item.type}</p>
                        <p>Price: {item.pcost}</p>
                        <p>Quantity: {item.qty}</p>
                        <button onClick={() => removeFromCart(item.uniqueKey)}>Remove</button>
                    </div>
                </div>
            ))}
            <h3>Total: {totalPrice}</h3>
            <button onClick={() => navigate('/checkout')}>Proceed to Checkout</button>
        </div>
    );
}

export default Cart;

login.css:
.login-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: #f4f4f4;
}

.login-box {
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
}

.login-box input {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.login-box button {
    width: 100%;
    padding: 10px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;
}

.login-box button:hover {
    background: #0056b3;
}

.error-message {
    color: red;
    font-size: 14px;
    margin-bottom: 10px;
}
dashboard.css:
.dashboard-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    background: #f8f9fa;
    min-height: 100vh;
}

.dashboard-nav {
    display: flex;
    gap: 20px;
    margin-bottom: 20px;
}

.dashboard-nav a {
    text-decoration: none;
    padding: 10px 20px;
    border-radius: 5px;
    background: #007bff;
    color: white;
    font-size: 16px;
    transition: 0.3s;
}

.dashboard-nav a:hover {
    background: #0056b3;
}

.dashboard-content {
    width: 100%;
    display: flex;
    justify-content: center;
}
common.css:
/* Back Button Styling */
.back-button {
    background: #ff4d4d;
    color: white;
    padding: 8px 15px;
    border: none;
    border-radius: 5px;
    font-size: 14px;
    cursor: pointer;
    transition:  0.3s;
    margin-bottom: 10px;
}

.back-button:hover {
    background: #cc0000;
}
CartIcon.css:
/* Cart Icon Positioned at Top-Right */
.cart-icon {
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 24px;
    text-decoration: none;
    color: #333;
    font-weight: bold;
}

.cart-icon:hover {
    color: #007bff;
}

/* Cart Count Superscript */
.cart-icon .cart-count {
    position: absolute;
    top: -8px;
    right: -10px;
    font-size: 14px;
    color: red;
    font-weight: bold;
    background: white;
    border-radius: 50%;
    padding: 2px 6px;
    border: 1px solid red;
}
